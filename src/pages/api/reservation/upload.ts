import type { NextApiRequest, NextApiResponse } from "next";
import Reservation, {
  type ReservationTableData,
} from "@/classes/ReservationTable";
import { type TableData } from "@/classes/Table";
import notify, { NotifyData } from "@/libs/notify";

type Data = {
  message: string;
  data?: ReservationTableData | ReservationTableData[] | any;
};

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  try {
    switch (req.method) {
      case "PATCH":
        const data = (await Reservation.updateReservation(
          req.body
        )) as ReservationTableData;

        const table = data.tableId as TableData;

        const LINEPayload: NotifyData = {
          imageFile: data.slip,
          stickerId: 16581273,
          stickerPackageId: 8522,
          message: `\nüíµ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà: ${table.index}\n‡πÇ‡∏î‡∏¢: ${data.name}\n‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${data.phone}\n‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${data.email}\n‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà: ${data.generation}\n‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ${data.method}\nURL: ${data.slip}`,
        };

        notify(LINEPayload,"dinner").then((res) =>
          console.log(`send notify: ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`)
        );

        res.status(200).json({ message: "success", data: data });
        break;
      default:
        res.status(405).json({ message: "Method not allowed" });
        break;
    }
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
}
